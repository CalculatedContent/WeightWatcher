# Changelog
All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).


## [0.6.3.3 (testpypi)] - 2023-01-17
Fixed unit tests, removed CKA and EUCLIDIAN tests for now
Note: min_evals default different for analyze() and describe()



## [0.6.3.1 (testpypi)] - 2023-01-16
minor bug fixes in the unit tests associated with issue 156


## [0.6.3.1 (testpypi)] - 2023-01-15
issue 160: updated fix_fingers='clip_xmax', now only checks alpha decreases by 1 or more
issue 156: implemented everywhere: params = DEFAULT_PARAMS.copy() 
added examples/WW-Albert.ipynb 

## [0.6.3 (in progress on trunk)] - 2023-01-05
removed explcit dependencies on tensorflow pytoch, and onnx
infers framework  from model , then  imports (tf | torch |onnx)
add ability to extract and read pytorch statedict files directly
removed combine_weights_and_bias as default, not implemented anywhere
fixed unit tests, moved model and watcher to object constructor


## [0.6.2 (in progress on trunk)] - 2022-11-27
### Added
Q in details dataframe
raw_distances implemented as distances(..., method=RAW)
distances(): added method=EUCLIDEAN | CKA
unit test(s) for distances




## [0.6.x (in progress on trunk)] - 2022-10-05
### Added
examples directory with notebooks and README
start_ids=1 added to analyze(), describe(), SVDSmoothing(), SVDSharpness() for issue #65 
tqdm to setup.py
matplotlib-inline  to setup.py

### Removed
watcher.analyze(..., normalize=...).  
pyRMT


### Changed
powerlaw.Fit() wrapped in method to suppress stdout and stderr 
analyze(vectors=True) is turned back on as default
setup.py to use metaclass , not import ww, to allow better handling of dependencies
details.append() changed to details=pd.contact([details, data])  #137
models.vgg11(pretrained=True) to models.vgg11(weights='VGG11_Weights.IMAGENET1K_V1')
same for resnet



### Fixed
TPL and E_TPL fits use xmin_distribution='trunctated_power_law'
replaced np.linalg.eig and np.linalg.svd with scipy version because they are faster and more numerically stable
analyze(savefig=False) now works in all cases
Fixed minor issues: 65, #69, #72, #82
tests/test.py  Test_TFBert.test_num_layers added (but #74 kept)
